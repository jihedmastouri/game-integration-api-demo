basePath: /
definitions:
  service.AuthRequest:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  shared.ErrorResponse:
    properties:
      code:
        allOf:
        - $ref: '#/definitions/shared.errorCode'
        example: Invalid request
      msg:
        example: Validation failed
        type: string
    type: object
  shared.PlayerInfoResponse:
    properties:
      balance:
        example: "1000.50"
        type: string
      currency:
        example: USD
        type: string
      user_id:
        example: 1
        type: integer
    type: object
  shared.errorCode:
    enum:
    - REQUEST_VALIDATION_ERROR
    - SERVICE_UNAVAILABLE
    - UNAUTHORIZED
    type: string
    x-enum-varnames:
    - ValidationError
    - ServiceUnAvailable
    - Unauthorized
host: localhost:3000
info:
  contact:
    email: support@gameintegration.com
    name: API Support
  description: Game Integration API for managing players, bets, and transactions
  title: Game Integration API
  version: "1.0"
paths:
  /api/v1/auth:
    post:
      consumes:
      - application/json
      description: Authenticates a player using username and password, returns a JWT
        token
      parameters:
      - description: Authentication credentials
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/service.AuthRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Authentication successful
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/shared.ErrorResponse'
      summary: Authenticate player
      tags:
      - Authentication
  /api/v1/player-info:
    get:
      consumes:
      - application/json
      description: Retrieves essential player details including user ID, balance,
        and currency
      parameters:
      - default: Bearer <token>
        description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Player information
          schema:
            $ref: '#/definitions/shared.PlayerInfoResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/shared.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get player information
      tags:
      - Player
securityDefinitions:
  BearerAuth:
    description: Type "Bearer" followed by a space and JWT token.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
