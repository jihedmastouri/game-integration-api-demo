basePath: /
definitions:
  models.Currency:
    enum:
    - USD
    - EUR
    - KES
    type: string
    x-enum-varnames:
    - CurrencyUSD
    - CurrencyEUR
    - CurrencyKES
  models.TransactionStatus:
    enum:
    - PENDING
    - CONFIRMED
    - FAILED
    - FINAL
    - PROCESSING
    type: string
    x-enum-varnames:
    - TransactionStatusPending
    - TransactionStatusConfirmed
    - TransactionStatusFailed
    - TransactionStatusFinalized
    - TransactionStatusProcessing
  service.AuthRequest:
    properties:
      password:
        example: demo123!
        type: string
      username:
        example: player_34633089486
        type: string
    type: object
  shared.BetOperationResponse:
    properties:
      new_balance:
        example: "1000.50"
        type: string
      old_balance:
        example: "1900.50"
        type: string
      provider_transaction_id:
        example: 12345
        type: integer
      status:
        allOf:
        - $ref: '#/definitions/models.TransactionStatus'
        example: CONFIRMED
      transaction_id:
        example: 550e8400-e29b-41d4-a716-446655440000
        type: string
    type: object
  shared.CancelRequest:
    properties:
      provider_transaction_id:
        example: 12345
        type: integer
    required:
    - provider_transaction_id
    type: object
  shared.DepositRequest:
    properties:
      amount:
        example: 1000
        minimum: 0
        type: number
      currency:
        allOf:
        - $ref: '#/definitions/models.Currency'
        example: USD
      provider_transaction_id:
        example: 12345
        type: integer
      provider_withdrawn_transaction_id:
        example: 12344
        type: integer
    required:
    - currency
    - provider_transaction_id
    - provider_withdrawn_transaction_id
    type: object
  shared.ErrorResponse:
    properties:
      code:
        allOf:
        - $ref: '#/definitions/shared.errorCode'
        example: Invalid request
      msg:
        example: Validation failed
        type: string
    type: object
  shared.PlayerInfoResponse:
    properties:
      balance:
        example: "1000.50"
        type: string
      currency:
        example: USD
        type: string
      user_id:
        example: 1
        type: integer
    type: object
  shared.WithdrawRequest:
    properties:
      amount:
        example: 100
        type: number
      currency:
        allOf:
        - $ref: '#/definitions/models.Currency'
        example: USD
      provider_transaction_id:
        example: 12345
        type: integer
    required:
    - amount
    - currency
    - provider_transaction_id
    type: object
  shared.errorCode:
    enum:
    - REQUEST_VALIDATION_ERROR
    - SERVICE_UNAVAILABLE
    - INTERNAL_SERVER_ERROR
    - UNAUTHORIZED
    type: string
    x-enum-varnames:
    - ValidationError
    - ServiceUnAvailable
    - InternalServerError
    - Unauthorized
host: localhost:3000
info:
  contact:
    email: support@gameintegration.com
    name: API Support
  description: Game Integration API for managing players, bets, and transactions
  title: Game Integration API
  version: "1.0"
paths:
  /api/v1/auth:
    post:
      consumes:
      - application/json
      description: Authenticates a player using username and password, returns a JWT
        token
      parameters:
      - description: Authentication credentials
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/service.AuthRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Authentication successful
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/shared.ErrorResponse'
      summary: Authenticate player
      tags:
      - Authentication
  /api/v1/cancel:
    post:
      consumes:
      - application/json
      description: Reverts a previously processed transaction by reversing its financial
        impact
      parameters:
      - default: Bearer <token>
        description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Cancel request details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/shared.CancelRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Transaction cancelled successfully
          schema:
            $ref: '#/definitions/shared.BetOperationResponse'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/shared.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.ErrorResponse'
        "404":
          description: Transaction not found
          schema:
            $ref: '#/definitions/shared.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/shared.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Cancel a transaction
      tags:
      - Betting
  /api/v1/deposit:
    post:
      consumes:
      - application/json
      description: Processes a deposit into a player's account. Represents bet settlement
        - if amount is zero, bet is LOST; otherwise, bet is WON.
      parameters:
      - default: Bearer <token>
        description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Settle request details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/shared.DepositRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Bet settled successfully
          schema:
            $ref: '#/definitions/shared.BetOperationResponse'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/shared.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/shared.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Settle a bet
      tags:
      - Betting
  /api/v1/player-info:
    get:
      consumes:
      - application/json
      description: Retrieves essential player details including user ID, balance,
        and currency
      parameters:
      - default: Bearer <token>
        description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Player information
          schema:
            $ref: '#/definitions/shared.PlayerInfoResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/shared.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get player information
      tags:
      - Player
  /api/v1/withdraw:
    post:
      consumes:
      - application/json
      description: Processes a withdrawal from a player's balance. Each request represents
        a bet placement action.
      parameters:
      - default: Bearer <token>
        description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Bet request details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/shared.WithdrawRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Bet processed successfully
          schema:
            $ref: '#/definitions/shared.BetOperationResponse'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/shared.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/shared.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Process a bet
      tags:
      - Betting
securityDefinitions:
  BearerAuth:
    description: Type "Bearer" followed by a space and JWT token.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
